// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sistema.Data;

#nullable disable

namespace Sistema.Migrations
{
    [DbContext(typeof(SistemaDbContext))]
    partial class SistemaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Sistema.Data.Entities.Agendamento", b =>
                {
                    b.Property<int>("AgendamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AgendamentoId"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("date");

                    b.Property<bool>("ExportadoExcel")
                        .HasColumnType("bit");

                    b.Property<bool>("ExportadoPdf")
                        .HasColumnType("bit");

                    b.Property<TimeSpan>("Horario")
                        .HasColumnType("time");

                    b.Property<bool>("LembreteEnviado")
                        .HasColumnType("bit");

                    b.Property<string>("Observacoes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfissionalId")
                        .HasColumnType("int");

                    b.Property<int>("ServicoId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("AgendamentoId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ProfissionalId");

                    b.HasIndex("ServicoId");

                    b.ToTable("Agendamentos");
                });

            modelBuilder.Entity("Sistema.Data.Entities.AvaliacaoAtendimento", b =>
                {
                    b.Property<int>("AvaliacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AvaliacaoId"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Comentarios")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataAvaliacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("Satisfacao")
                        .HasColumnType("int");

                    b.Property<int>("ServicoId")
                        .HasColumnType("int");

                    b.HasKey("AvaliacaoId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ServicoId");

                    b.ToTable("AvaliacoesAtendimento");
                });

            modelBuilder.Entity("Sistema.Data.Entities.Caixa", b =>
                {
                    b.Property<int>("CaixaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CaixaId"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("date");

                    b.Property<bool>("ExportadoExcel")
                        .HasColumnType("bit");

                    b.Property<bool>("ExportadoPdf")
                        .HasColumnType("bit");

                    b.Property<string>("Observacoes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("UsuarioAbertura")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioAberturaRefUsuarioId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioFechamento")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioFechamentoRefUsuarioId")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorFinal")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("ValorInicial")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("CaixaId");

                    b.HasIndex("UsuarioAberturaRefUsuarioId");

                    b.HasIndex("UsuarioFechamentoRefUsuarioId");

                    b.ToTable("Caixa");
                });

            modelBuilder.Entity("Sistema.Data.Entities.CategoriaProduto", b =>
                {
                    b.Property<int>("CategoriaProdutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoriaProdutoId"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CategoriaProdutoId");

                    b.ToTable("CategoriasProdutos");
                });

            modelBuilder.Entity("Sistema.Data.Entities.CategoriaServico", b =>
                {
                    b.Property<int>("CategoriaServicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoriaServicoId"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CategoriaServicoId");

                    b.ToTable("CategoriasServicos");
                });

            modelBuilder.Entity("Sistema.Data.Entities.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteId"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Endereco")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("HistoricoAlergias")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Observacoes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telemovel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ClienteId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Sistema.Data.Entities.Configuracao", b =>
                {
                    b.Property<int>("ConfiguracaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConfiguracaoId"));

                    b.Property<decimal>("ComissaoPadraoDesign")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("ComissaoPadraoExtensao")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("DuracaoPadraoServico")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Endereco")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("HorarioFuncionamento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Icone")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Instagram")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Logo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LogoRelatorio")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NomeClinica")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PastaImagens")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TelefoneFixo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TelemovelWhatsApp")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoComissao")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("TipoRelatorio")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ConfiguracaoId");

                    b.ToTable("Configuracoes");
                });

            modelBuilder.Entity("Sistema.Data.Entities.Estetica", b =>
                {
                    b.Property<int>("EsteticaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EsteticaId"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("ExportadoExcel")
                        .HasColumnType("bit");

                    b.Property<bool>("ExportadoPdf")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telemovel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("EsteticaId");

                    b.ToTable("Esteticas");
                });

            modelBuilder.Entity("Sistema.Data.Entities.EstoqueEntrada", b =>
                {
                    b.Property<int>("EntradaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntradaId"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DataValidade")
                        .HasColumnType("date");

                    b.Property<bool>("ExportadoExcel")
                        .HasColumnType("bit");

                    b.Property<bool>("ExportadoPdf")
                        .HasColumnType("bit");

                    b.Property<int?>("FornecedorId")
                        .HasColumnType("int");

                    b.Property<string>("Lote")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<string>("TipoMovimentacao")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ValorUnitario")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("EntradaId");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("EstoqueEntradas");
                });

            modelBuilder.Entity("Sistema.Data.Entities.EstoqueMovimentacao", b =>
                {
                    b.Property<int>("MovimentacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovimentacaoId"));

                    b.Property<DateTime>("DataMovimentacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataValidade")
                        .HasColumnType("date");

                    b.Property<int?>("FornecedorId")
                        .HasColumnType("int");

                    b.Property<string>("Lote")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<string>("TipoMovimentacao")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("MovimentacaoId");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("EstoqueMovimentacoes");
                });

            modelBuilder.Entity("Sistema.Data.Entities.EstoqueSaida", b =>
                {
                    b.Property<int>("SaidaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SaidaId"));

                    b.Property<int?>("AgendamentoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("date");

                    b.Property<bool>("ExportadoExcel")
                        .HasColumnType("bit");

                    b.Property<bool>("ExportadoPdf")
                        .HasColumnType("bit");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<string>("TipoMovimentacao")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ValorUnitario")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("SaidaId");

                    b.HasIndex("AgendamentoId");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("EstoqueSaidas");
                });

            modelBuilder.Entity("Sistema.Data.Entities.Faturacao", b =>
                {
                    b.Property<int>("FaturacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FaturacaoId"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("date");

                    b.Property<bool>("ExportadoExcel")
                        .HasColumnType("bit");

                    b.Property<bool>("ExportadoPdf")
                        .HasColumnType("bit");

                    b.Property<int>("QuantidadeProdutos")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeServicos")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("FaturacaoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Faturacao");
                });

            modelBuilder.Entity("Sistema.Data.Entities.FormaPagamento", b =>
                {
                    b.Property<int>("FormaPagamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FormaPagamentoId"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("FormaPagamentoId");

                    b.ToTable("FormasPagamento");
                });

            modelBuilder.Entity("Sistema.Data.Entities.Fornecedor", b =>
                {
                    b.Property<int>("FornecedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FornecedorId"));

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Endereco")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Nif")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Observacoes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PrazoEntrega")
                        .HasColumnType("int");

                    b.Property<string>("Telemovel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("FornecedorId");

                    b.ToTable("Fornecedores");
                });

            modelBuilder.Entity("Sistema.Data.Entities.HistoricoProcedimento", b =>
                {
                    b.Property<int>("ProcedimentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProcedimentoId"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataProcedimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaterialUsado")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ObservacoesTecnicas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("ProfissionalId")
                        .HasColumnType("int");

                    b.Property<int>("ServicoId")
                        .HasColumnType("int");

                    b.HasKey("ProcedimentoId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ProfissionalId");

                    b.HasIndex("ServicoId");

                    b.ToTable("HistoricoProcedimentos");
                });

            modelBuilder.Entity("Sistema.Data.Entities.Horario", b =>
                {
                    b.Property<int>("HorarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HorarioId"));

                    b.Property<DateTime?>("DataEspecifica")
                        .HasColumnType("date");

                    b.Property<int?>("DiaSemana")
                        .HasColumnType("int");

                    b.Property<bool>("ExportadoExcel")
                        .HasColumnType("bit");

                    b.Property<bool>("ExportadoPdf")
                        .HasColumnType("bit");

                    b.Property<TimeSpan>("Hora")
                        .HasColumnType("time");

                    b.Property<int>("ProfissionalId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("HorarioId");

                    b.HasIndex("ProfissionalId");

                    b.ToTable("Horarios");
                });

            modelBuilder.Entity("Sistema.Data.Entities.Lembrete", b =>
                {
                    b.Property<int>("LembreteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LembreteId"));

                    b.Property<int>("AgendamentoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataEnvio")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ExportadoExcel")
                        .HasColumnType("bit");

                    b.Property<bool>("ExportadoPdf")
                        .HasColumnType("bit");

                    b.Property<string>("MeioEnvio")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("LembreteId");

                    b.HasIndex("AgendamentoId");

                    b.ToTable("Lembretes");
                });

            modelBuilder.Entity("Sistema.Data.Entities.Pagar", b =>
                {
                    b.Property<int>("PagarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PagarId"));

                    b.Property<DateTime>("DataLanc")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DataPgto")
                        .HasColumnType("date");

                    b.Property<DateTime>("DataVenc")
                        .HasColumnType("date");

                    b.Property<string>("Descricao")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("ExportadoExcel")
                        .HasColumnType("bit");

                    b.Property<bool>("ExportadoPdf")
                        .HasColumnType("bit");

                    b.Property<int?>("FormaPagamentoId")
                        .HasColumnType("int");

                    b.Property<string>("Foto")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Pago")
                        .HasColumnType("bit");

                    b.Property<int>("Parcela")
                        .HasColumnType("int");

                    b.Property<int?>("PessoaId")
                        .HasColumnType("int");

                    b.Property<int?>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int?>("Quantidade")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TotalParcelas")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioBaixa")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioBaixadorUsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioLanc")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioLancadorUsuarioId")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("PagarId");

                    b.HasIndex("FormaPagamentoId");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("UsuarioBaixadorUsuarioId");

                    b.HasIndex("UsuarioLancadorUsuarioId");

                    b.ToTable("Pagar");
                });

            modelBuilder.Entity("Sistema.Data.Entities.Perfil", b =>
                {
                    b.Property<int>("PerfilId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PerfilId"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PerfilId");

                    b.ToTable("Perfis");
                });

            modelBuilder.Entity("Sistema.Data.Entities.Plano", b =>
                {
                    b.Property<int>("PlanoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlanoId"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ExportadoExcel")
                        .HasColumnType("bit");

                    b.Property<bool>("ExportadoPdf")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("QuantidadeSessoes")
                        .HasColumnType("int");

                    b.Property<int>("ValidadeDias")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("PlanoId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Planos");
                });

            modelBuilder.Entity("Sistema.Data.Entities.PlanoAgendamento", b =>
                {
                    b.Property<int>("PlanoAgendamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlanoAgendamentoId"));

                    b.Property<int>("AgendamentoId")
                        .HasColumnType("int");

                    b.Property<int>("PlanoId")
                        .HasColumnType("int");

                    b.Property<bool>("SessaoUsada")
                        .HasColumnType("bit");

                    b.HasKey("PlanoAgendamentoId");

                    b.HasIndex("AgendamentoId");

                    b.HasIndex("PlanoId");

                    b.ToTable("PlanoAgendamentos");
                });

            modelBuilder.Entity("Sistema.Data.Entities.Produto", b =>
                {
                    b.Property<int>("ProdutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProdutoId"));

                    b.Property<int>("CategoriaProdutoId")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Estoque")
                        .HasColumnType("int");

                    b.Property<int?>("FornecedorId")
                        .HasColumnType("int");

                    b.Property<string>("Foto")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("NivelEstoqueMinimo")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal>("ValorCompra")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("ValorVenda")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("ProdutoId");

                    b.HasIndex("CategoriaProdutoId");

                    b.HasIndex("FornecedorId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("Sistema.Data.Entities.Profissional", b =>
                {
                    b.Property<int>("ProfissionalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProfissionalId"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<decimal>("ComissaoPadrao")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Especialidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("ProfissionalId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Profissionais");
                });

            modelBuilder.Entity("Sistema.Data.Entities.ProfissionalServico", b =>
                {
                    b.Property<int>("ProfissionalServicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProfissionalServicoId"));

                    b.Property<decimal?>("Comissao")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("ProfissionalId")
                        .HasColumnType("int");

                    b.Property<int>("ServicoId")
                        .HasColumnType("int");

                    b.HasKey("ProfissionalServicoId");

                    b.HasIndex("ProfissionalId");

                    b.HasIndex("ServicoId");

                    b.ToTable("ProfissionalServicos");
                });

            modelBuilder.Entity("Sistema.Data.Entities.Receber", b =>
                {
                    b.Property<int>("ReceberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReceberId"));

                    b.Property<DateTime>("DataLanc")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DataPgto")
                        .HasColumnType("date");

                    b.Property<DateTime>("DataVenc")
                        .HasColumnType("date");

                    b.Property<string>("Descricao")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("ExportadoExcel")
                        .HasColumnType("bit");

                    b.Property<bool>("ExportadoPdf")
                        .HasColumnType("bit");

                    b.Property<int?>("FormaPagamentoId")
                        .HasColumnType("int");

                    b.Property<string>("Foto")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Pago")
                        .HasColumnType("bit");

                    b.Property<int>("Parcela")
                        .HasColumnType("int");

                    b.Property<int?>("PessoaId")
                        .HasColumnType("int");

                    b.Property<int?>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int?>("Quantidade")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TotalParcelas")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioBaixa")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioBaixadorUsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioLanc")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioLancadorUsuarioId")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("ReceberId");

                    b.HasIndex("FormaPagamentoId");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("UsuarioBaixadorUsuarioId");

                    b.HasIndex("UsuarioLancadorUsuarioId");

                    b.ToTable("Receber");
                });

            modelBuilder.Entity("Sistema.Data.Entities.RegistroAcesso", b =>
                {
                    b.Property<int>("RegistroAcessosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RegistroAcessosId"));

                    b.Property<string>("Acao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("RegistroAcessosId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("RegistroAcessos");
                });

            modelBuilder.Entity("Sistema.Data.Entities.Servico", b =>
                {
                    b.Property<int>("ServicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServicoId"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("CategoriaServicoId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Comissao")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("DiasRetorno")
                        .HasColumnType("int");

                    b.Property<string>("Foto")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("ServicoId");

                    b.HasIndex("CategoriaServicoId");

                    b.ToTable("Servicos");
                });

            modelBuilder.Entity("Sistema.Data.Entities.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Endereco")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Foto")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Nif")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PerfilId")
                        .HasColumnType("int");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Telemovel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("UsuarioId");

                    b.HasIndex("PerfilId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Sistema.Data.Entities.Agendamento", b =>
                {
                    b.HasOne("Sistema.Data.Entities.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sistema.Data.Entities.Profissional", "Profissional")
                        .WithMany("Agendamentos")
                        .HasForeignKey("ProfissionalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sistema.Data.Entities.Servico", "Servico")
                        .WithMany()
                        .HasForeignKey("ServicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Profissional");

                    b.Navigation("Servico");
                });

            modelBuilder.Entity("Sistema.Data.Entities.AvaliacaoAtendimento", b =>
                {
                    b.HasOne("Sistema.Data.Entities.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sistema.Data.Entities.Servico", "Servico")
                        .WithMany()
                        .HasForeignKey("ServicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Servico");
                });

            modelBuilder.Entity("Sistema.Data.Entities.Caixa", b =>
                {
                    b.HasOne("Sistema.Data.Entities.Usuario", "UsuarioAberturaRef")
                        .WithMany()
                        .HasForeignKey("UsuarioAberturaRefUsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sistema.Data.Entities.Usuario", "UsuarioFechamentoRef")
                        .WithMany()
                        .HasForeignKey("UsuarioFechamentoRefUsuarioId");

                    b.Navigation("UsuarioAberturaRef");

                    b.Navigation("UsuarioFechamentoRef");
                });

            modelBuilder.Entity("Sistema.Data.Entities.EstoqueEntrada", b =>
                {
                    b.HasOne("Sistema.Data.Entities.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorId");

                    b.HasOne("Sistema.Data.Entities.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sistema.Data.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fornecedor");

                    b.Navigation("Produto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Sistema.Data.Entities.EstoqueMovimentacao", b =>
                {
                    b.HasOne("Sistema.Data.Entities.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorId");

                    b.HasOne("Sistema.Data.Entities.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sistema.Data.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fornecedor");

                    b.Navigation("Produto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Sistema.Data.Entities.EstoqueSaida", b =>
                {
                    b.HasOne("Sistema.Data.Entities.Agendamento", "Agendamento")
                        .WithMany()
                        .HasForeignKey("AgendamentoId");

                    b.HasOne("Sistema.Data.Entities.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sistema.Data.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agendamento");

                    b.Navigation("Produto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Sistema.Data.Entities.Faturacao", b =>
                {
                    b.HasOne("Sistema.Data.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Sistema.Data.Entities.HistoricoProcedimento", b =>
                {
                    b.HasOne("Sistema.Data.Entities.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sistema.Data.Entities.Profissional", "Profissional")
                        .WithMany()
                        .HasForeignKey("ProfissionalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sistema.Data.Entities.Servico", "Servico")
                        .WithMany()
                        .HasForeignKey("ServicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Profissional");

                    b.Navigation("Servico");
                });

            modelBuilder.Entity("Sistema.Data.Entities.Horario", b =>
                {
                    b.HasOne("Sistema.Data.Entities.Profissional", "Profissional")
                        .WithMany("Horarios")
                        .HasForeignKey("ProfissionalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profissional");
                });

            modelBuilder.Entity("Sistema.Data.Entities.Lembrete", b =>
                {
                    b.HasOne("Sistema.Data.Entities.Agendamento", "Agendamento")
                        .WithMany("Lembretes")
                        .HasForeignKey("AgendamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agendamento");
                });

            modelBuilder.Entity("Sistema.Data.Entities.Pagar", b =>
                {
                    b.HasOne("Sistema.Data.Entities.FormaPagamento", "FormaPagamento")
                        .WithMany("Pagar")
                        .HasForeignKey("FormaPagamentoId");

                    b.HasOne("Sistema.Data.Entities.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId");

                    b.HasOne("Sistema.Data.Entities.Usuario", "UsuarioBaixador")
                        .WithMany()
                        .HasForeignKey("UsuarioBaixadorUsuarioId");

                    b.HasOne("Sistema.Data.Entities.Usuario", "UsuarioLancador")
                        .WithMany()
                        .HasForeignKey("UsuarioLancadorUsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormaPagamento");

                    b.Navigation("Produto");

                    b.Navigation("UsuarioBaixador");

                    b.Navigation("UsuarioLancador");
                });

            modelBuilder.Entity("Sistema.Data.Entities.Plano", b =>
                {
                    b.HasOne("Sistema.Data.Entities.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Sistema.Data.Entities.PlanoAgendamento", b =>
                {
                    b.HasOne("Sistema.Data.Entities.Agendamento", "Agendamento")
                        .WithMany()
                        .HasForeignKey("AgendamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sistema.Data.Entities.Plano", "Plano")
                        .WithMany("PlanoAgendamentos")
                        .HasForeignKey("PlanoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agendamento");

                    b.Navigation("Plano");
                });

            modelBuilder.Entity("Sistema.Data.Entities.Produto", b =>
                {
                    b.HasOne("Sistema.Data.Entities.CategoriaProduto", "CategoriaProduto")
                        .WithMany("Produtos")
                        .HasForeignKey("CategoriaProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sistema.Data.Entities.Fornecedor", "Fornecedor")
                        .WithMany("Produtos")
                        .HasForeignKey("FornecedorId");

                    b.Navigation("CategoriaProduto");

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("Sistema.Data.Entities.Profissional", b =>
                {
                    b.HasOne("Sistema.Data.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Sistema.Data.Entities.ProfissionalServico", b =>
                {
                    b.HasOne("Sistema.Data.Entities.Profissional", "Profissional")
                        .WithMany("ProfissionalServicos")
                        .HasForeignKey("ProfissionalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sistema.Data.Entities.Servico", "Servico")
                        .WithMany()
                        .HasForeignKey("ServicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profissional");

                    b.Navigation("Servico");
                });

            modelBuilder.Entity("Sistema.Data.Entities.Receber", b =>
                {
                    b.HasOne("Sistema.Data.Entities.FormaPagamento", "FormaPagamento")
                        .WithMany("Receber")
                        .HasForeignKey("FormaPagamentoId");

                    b.HasOne("Sistema.Data.Entities.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId");

                    b.HasOne("Sistema.Data.Entities.Usuario", "UsuarioBaixador")
                        .WithMany()
                        .HasForeignKey("UsuarioBaixadorUsuarioId");

                    b.HasOne("Sistema.Data.Entities.Usuario", "UsuarioLancador")
                        .WithMany()
                        .HasForeignKey("UsuarioLancadorUsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormaPagamento");

                    b.Navigation("Produto");

                    b.Navigation("UsuarioBaixador");

                    b.Navigation("UsuarioLancador");
                });

            modelBuilder.Entity("Sistema.Data.Entities.RegistroAcesso", b =>
                {
                    b.HasOne("Sistema.Data.Entities.Usuario", "Usuario")
                        .WithMany("RegistroAcessos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Sistema.Data.Entities.Servico", b =>
                {
                    b.HasOne("Sistema.Data.Entities.CategoriaServico", "CategoriaServico")
                        .WithMany("Servicos")
                        .HasForeignKey("CategoriaServicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoriaServico");
                });

            modelBuilder.Entity("Sistema.Data.Entities.Usuario", b =>
                {
                    b.HasOne("Sistema.Data.Entities.Perfil", "Perfil")
                        .WithMany("Usuarios")
                        .HasForeignKey("PerfilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("Sistema.Data.Entities.Agendamento", b =>
                {
                    b.Navigation("Lembretes");
                });

            modelBuilder.Entity("Sistema.Data.Entities.CategoriaProduto", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("Sistema.Data.Entities.CategoriaServico", b =>
                {
                    b.Navigation("Servicos");
                });

            modelBuilder.Entity("Sistema.Data.Entities.FormaPagamento", b =>
                {
                    b.Navigation("Pagar");

                    b.Navigation("Receber");
                });

            modelBuilder.Entity("Sistema.Data.Entities.Fornecedor", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("Sistema.Data.Entities.Perfil", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Sistema.Data.Entities.Plano", b =>
                {
                    b.Navigation("PlanoAgendamentos");
                });

            modelBuilder.Entity("Sistema.Data.Entities.Profissional", b =>
                {
                    b.Navigation("Agendamentos");

                    b.Navigation("Horarios");

                    b.Navigation("ProfissionalServicos");
                });

            modelBuilder.Entity("Sistema.Data.Entities.Usuario", b =>
                {
                    b.Navigation("RegistroAcessos");
                });
#pragma warning restore 612, 618
        }
    }
}
