@{
    ViewData["Title"] = "PDV - Ponto de Venda";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="content-header">
    <h1><i class="fas fa-shopping-cart me-2"></i>@ViewData["Title"]</h1>
    <p class="text-muted">Sistema de ponto de venda integrado</p>
</div>
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                @TempData["SuccessMessage"]
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        }

        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                @TempData["ErrorMessage"]
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        }

        <div class="row">
            <!-- Painel de Produtos -->
            <div class="col-md-8">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">Produtos</h3>
                    </div>
                    <div class="card-body">
                        <!-- Busca por código de barras -->
                        <div class="row mb-3">
                            <div class="col-md-8">
                                <div class="input-group">
                                    <input type="text" id="barcodeInput" class="form-control" placeholder="Digite o código de barras ou nome do produto">
                                    <div class="input-group-append">
                                        <button class="btn btn-primary" type="button" id="searchProductBtn">
                                            <i class="fas fa-search"></i> Buscar
                                        </button>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <button class="btn btn-success btn-block" id="addProductBtn" disabled>
                                    <i class="fas fa-plus"></i> Adicionar Produto
                                </button>
                            </div>
                        </div>

                        <!-- Resultado da busca -->
                        <div id="productSearchResult" class="mb-3" style="display: none;">
                            <div class="card">
                                <div class="card-body">
                                    <h5 id="productName"></h5>
                                    <p class="mb-1">Preço: <strong id="productPrice"></strong></p>
                                    <p class="mb-1">Estoque: <span id="productStock"></span></p>
                                    <div class="row mt-2">
                                        <div class="col-md-4">
                                            <label>Quantidade:</label>
                                            <input type="number" id="productQuantity" class="form-control" value="1" min="1">
                                        </div>
                                        <div class="col-md-4">
                                            <label>Preço Unitário:</label>
                                            <input type="number" id="productUnitPrice" class="form-control" step="0.01">
                                        </div>
                                        <div class="col-md-4">
                                            <label>Subtotal:</label>
                                            <input type="text" id="productSubtotal" class="form-control" readonly>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Lista de produtos adicionados -->
                        <div class="table-responsive">
                            <table class="table table-bordered" id="cartTable">
                                <thead>
                                    <tr>
                                        <th>Produto</th>
                                        <th width="100">Qtd</th>
                                        <th width="120">Preço Unit.</th>
                                        <th width="120">Subtotal</th>
                                        <th width="80">Ações</th>
                                    </tr>
                                </thead>
                                <tbody id="cartItems">
                                    <!-- Itens serão adicionados dinamicamente -->
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Painel de Venda -->
            <div class="col-md-4">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">Finalizar Venda</h3>
                    </div>
                    <div class="card-body">
                        <form id="saleForm">
                            <!-- Cliente -->
                            <div class="form-group">
                                <label for="customerId">Cliente:</label>
                                <select id="customerId" class="form-control" required>
                                    <option value="">Selecione um cliente</option>
                                    <!-- Opções serão carregadas via AJAX -->
                                </select>
                            </div>

                            <!-- Profissional -->
                            <div class="form-group">
                                <label for="professionalId">Profissional:</label>
                                <select id="professionalId" class="form-control" required>
                                    <option value="">Selecione um profissional</option>
                                    <!-- Opções serão carregadas via AJAX -->
                                </select>
                            </div>

                            <!-- Método de Pagamento -->
                            <div class="form-group">
                                <label for="paymentMethodId">Método de Pagamento:</label>
                                <select id="paymentMethodId" class="form-control" required>
                                    <option value="">Selecione o método</option>
                                    <!-- Opções serão carregadas via AJAX -->
                                </select>
                            </div>

                            <!-- Totais -->
                            <div class="form-group">
                                <label>Subtotal:</label>
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">€</span>
                                    </div>
                                    <input type="text" id="totalAmount" class="form-control" readonly>
                                </div>
                            </div>

                            <div class="form-group">
                                <label for="discount">Desconto:</label>
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">€</span>
                                    </div>
                                    <input type="number" id="discount" class="form-control" step="0.01" min="0" value="0">
                                </div>
                            </div>

                            <div class="form-group">
                                <label>Total Final:</label>
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">€</span>
                                    </div>
                                    <input type="text" id="finalTotal" class="form-control" readonly>
                                </div>
                            </div>

                            <!-- Comissão -->
                            <div class="form-group">
                                <label>Comissão Profissional:</label>
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">€</span>
                                    </div>
                                    <input type="text" id="commissionAmount" class="form-control" readonly>
                                </div>
                                <small class="form-text text-muted" id="commissionPercentage"></small>
                            </div>

                            <!-- Botões -->
                            <div class="form-group">
                                <button type="button" class="btn btn-danger btn-block mb-2" id="clearCartBtn">
                                    <i class="fas fa-trash"></i> Limpar Carrinho
                                </button>
                                <button type="submit" class="btn btn-success btn-block" id="finalizeSaleBtn" disabled>
                                    <i class="fas fa-check"></i> Finalizar Venda
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <script>
        let cartItems = [];
        let currentProduct = null;
        let customers = [];
        let professionals = [];
        let paymentMethods = [];

        $(document).ready(function() {
            loadCustomers();
            loadProfessionals();
            loadPaymentMethods();
            
            $('#barcodeInput').on('keypress', function(e) {
                if (e.which === 13) {
                    searchProduct();
                }
            });

            $('#searchProductBtn').click(searchProduct);
            $('#addProductBtn').click(addProductToCart);
            $('#clearCartBtn').click(clearCart);
            $('#saleForm').submit(finalizeSale);

            $('#productQuantity, #productUnitPrice').on('input', calculateSubtotal);
            $('#discount').on('input', calculateTotals);
            $('#professionalId').on('change', calculateCommission);
        });

        function searchProduct() {
            const code = $('#barcodeInput').val().trim();
            if (!code) return;

            $.get('/Admin/AdminCashRegister/GetProductByBarcode', { barcode: code })
                .done(function(product) {
                    currentProduct = {
                        id: product.id,
                        name: product.name,
                        price: product.price,
                        stock: product.stockQuantity
                    };
                    showProductResult();
                })
                .fail(function() {
                    Swal.fire('Erro', 'Produto não encontrado ou sem estoque', 'error');
                });
        }

        function showProductResult() {
            $('#productName').text(currentProduct.name);
            $('#productPrice').text('€' + currentProduct.price.toFixed(2));
            $('#productStock').text(currentProduct.stock);
            $('#productUnitPrice').val(currentProduct.price);
            $('#productQuantity').val(1);
            calculateSubtotal();
            $('#productSearchResult').show();
            $('#addProductBtn').prop('disabled', false);
        }

        function calculateSubtotal() {
            const quantity = parseInt($('#productQuantity').val()) || 0;
            const unitPrice = parseFloat($('#productUnitPrice').val()) || 0;
            const subtotal = quantity * unitPrice;
            $('#productSubtotal').val('€' + subtotal.toFixed(2));
        }

        function addProductToCart() {
            if (!currentProduct) return;

            const quantity = parseInt($('#productQuantity').val()) || 0;
            const unitPrice = parseFloat($('#productUnitPrice').val()) || 0;

            if (quantity <= 0) {
                Swal.fire('Erro', 'Quantidade deve ser maior que zero', 'error');
                return;
            }

            if (quantity > currentProduct.stock) {
                Swal.fire('Erro', 'Quantidade maior que o estoque disponível', 'error');
                return;
            }

            const existingItem = cartItems.find(item => item.productId === currentProduct.id);
            if (existingItem) {
                existingItem.quantity += quantity;
                existingItem.subtotal = existingItem.quantity * existingItem.unitPrice;
            } else {
                cartItems.push({
                    productId: currentProduct.id,
                    productName: currentProduct.name,
                    quantity: quantity,
                    unitPrice: unitPrice,
                    subtotal: quantity * unitPrice
                });
            }

            updateCartTable();
            calculateTotals();
            clearProductSearch();
        }

        function updateCartTable() {
            const tbody = $('#cartItems');
            tbody.empty();

            cartItems.forEach((item, index) => {
                const row = `
                    <tr>
                        <td>${item.productName}</td>
                        <td>${item.quantity}</td>
                        <td>€${item.unitPrice.toFixed(2)}</td>
                        <td>€${item.subtotal.toFixed(2)}</td>
                        <td>
                            <button class="btn btn-sm btn-danger" onclick="removeCartItem(${index})">
                                <i class="fas fa-trash"></i>
                            </button>
                        </td>
                    </tr>
                `;
                tbody.append(row);
            });

            $('#finalizeSaleBtn').prop('disabled', cartItems.length === 0);
        }

        function removeCartItem(index) {
            cartItems.splice(index, 1);
            updateCartTable();
            calculateTotals();
        }

        function clearCart() {
            cartItems = [];
            updateCartTable();
            calculateTotals();
        }

        function clearProductSearch() {
            $('#barcodeInput').val('');
            $('#productSearchResult').hide();
            $('#addProductBtn').prop('disabled', true);
            currentProduct = null;
        }

        function calculateTotals() {
            const subtotal = cartItems.reduce((sum, item) => sum + item.subtotal, 0);
            const discount = parseFloat($('#discount').val()) || 0;
            const finalTotal = subtotal - discount;

            $('#totalAmount').val('€' + subtotal.toFixed(2));
            $('#finalTotal').val('€' + finalTotal.toFixed(2));

            calculateCommission();
        }

        function calculateCommission() {
            const professionalId = $('#professionalId').val();
            const finalTotal = parseFloat($('#finalTotal').val().replace('€', '')) || 0;

            if (professionalId && finalTotal > 0) {
                const professional = professionals.find(p => p.professionalId == professionalId);
                if (professional && professional.commissionPercentage > 0) {
                    const commission = finalTotal * (professional.commissionPercentage / 100);
                    $('#commissionAmount').val('€' + commission.toFixed(2));
                    $('#commissionPercentage').text(professional.commissionPercentage + '% de comissão');
                } else {
                    $('#commissionAmount').val('€0.00');
                    $('#commissionPercentage').text('Sem comissão');
                }
            } else {
                $('#commissionAmount').val('€0.00');
                $('#commissionPercentage').text('');
            }
        }

        function loadCustomers() {
            $.get('/Admin/AdminCustomers/GetAll')
                .done(function(data) {
                    customers = data;
                    const select = $('#customerId');
                    select.empty().append('<option value="">Selecione um cliente</option>');
                    data.forEach(customer => {
                        select.append(`<option value="${customer.customerId}">${customer.name}</option>`);
                    });
                });
        }

        function loadProfessionals() {
            $.get('/Admin/AdminProfessionals/GetAll')
                .done(function(data) {
                    professionals = data;
                    const select = $('#professionalId');
                    select.empty().append('<option value="">Selecione um profissional</option>');
                    data.forEach(professional => {
                        select.append(`<option value="${professional.professionalId}">${professional.name}</option>`);
                    });
                });
        }

        function loadPaymentMethods() {
            $.get('/Admin/AdminPaymentMethod/GetAll')
                .done(function(data) {
                    paymentMethods = data;
                    const select = $('#paymentMethodId');
                    select.empty().append('<option value="">Selecione o método</option>');
                    data.forEach(method => {
                        select.append(`<option value="${method.paymentMethodId}">${method.name}</option>`);
                    });
                });
        }

        function finalizeSale(e) {
            e.preventDefault();

            if (cartItems.length === 0) {
                Swal.fire('Erro', 'Adicione pelo menos um produto', 'error');
                return;
            }

            const saleData = {
                customerId: parseInt($('#customerId').val()),
                professionalId: parseInt($('#professionalId').val()),
                paymentMethodId: parseInt($('#paymentMethodId').val()),
                total: cartItems.reduce((sum, item) => sum + item.subtotal, 0),
                discount: parseFloat($('#discount').val()) || 0,
                items: cartItems
            };

            Swal.fire({
                title: 'Finalizar Venda?',
                text: `Total: €${(saleData.total - saleData.discount).toFixed(2)}`,
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: 'Sim, finalizar!',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '/Admin/AdminCashRegister/FinalizeSale',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify(saleData),
                        headers: {
                            'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                        }
                    })
                    .done(function(response) {
                        if (response.success) {
                            Swal.fire('Sucesso!', response.message, 'success').then(() => {
                                clearCart();
                                $('#saleForm')[0].reset();
                                $('#barcodeInput').focus();
                            });
                        } else {
                            Swal.fire('Erro', response.message, 'error');
                        }
                    })
                    .fail(function() {
                        Swal.fire('Erro', 'Erro ao finalizar venda', 'error');
                    });
                }
            });
        }
    </script>
}
