@model IEnumerable<Sistema.Data.Entities.Appointment>

@{
    ViewData["Title"] = "Gestão de Agendamentos";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container-fluid px-4">
    <!-- Cabeçalho da página -->
    <div class="card shadow-sm mb-4">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h5 class="mb-0 fw-bold">
                <i class="fas fa-calendar-alt me-2"></i>@ViewData["Title"]
            </h5>
            <div class="d-flex gap-2">
                <button class="btn btn-outline-primary btn-sm" data-bs-toggle="modal" data-bs-target="#filterModal">
                    <i class="fas fa-filter me-1"></i>Filtros
                </button>
                <a asp-action="Create" class="btn btn-primary btn-sm">
                    <i class="fas fa-plus me-1"></i>Novo Agendamento
                </a>
            </div>
        </div>
        <div class="card-body">
            <p class="text-muted mb-0">Gerencie todos os agendamentos do sistema</p>
        </div>
    </div>

    <!-- Alertas -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle me-2"></i>@TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="fas fa-exclamation-triangle me-2"></i>@TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <!-- Estatísticas -->
    <div class="row g-3 mb-4">
        <div class="col-lg-3 col-md-6">
            <div class="small-box bg-warning">
                <div class="inner">
                    <h3>@Model.Count(a => a.Status == "Pending")</h3>
                    <p>Pendentes</p>
                </div>
                <div class="icon">
                    <i class="fas fa-clock"></i>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6">
            <div class="small-box bg-success">
                <div class="inner">
                    <h3>@Model.Count(a => a.Status == "Confirmed")</h3>
                    <p>Confirmados</p>
                </div>
                <div class="icon">
                    <i class="fas fa-check-circle"></i>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6">
            <div class="small-box bg-info">
                <div class="inner">
                    <h3>@Model.Count(a => a.Status == "Completed")</h3>
                    <p>Concluídos</p>
                </div>
                <div class="icon">
                    <i class="fas fa-check-double"></i>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6">
            <div class="small-box bg-danger">
                <div class="inner">
                    <h3>@Model.Count(a => a.Status == "Canceled")</h3>
                    <p>Cancelados</p>
                </div>
                <div class="icon">
                    <i class="fas fa-times-circle"></i>
                </div>
            </div>
        </div>
    </div>

    <!-- Tabela de Agendamentos -->
    <div class="card shadow-sm">
        <div class="card-header">
            <h5 class="card-title mb-0">
                <i class="fas fa-list me-2"></i>Lista de Agendamentos
            </h5>
        </div>
        <div class="card-body">
            @if (Model?.Any() == true)
            {
                <div class="table-responsive">
                    <table class="table table-hover align-middle">
                        <thead class="table-light text-uppercase small">
                            <tr>
                                <th>
                                    <i class="fas fa-hashtag me-1"></i>ID
                                </th>
                                <th>
                                    <i class="fas fa-user me-1"></i>Cliente
                                </th>
                                <th>
                                    <i class="fas fa-concierge-bell me-1"></i>Serviço
                                </th>
                                <th>
                                    <i class="fas fa-user-tie me-1"></i>Profissional
                                </th>
                                <th>
                                    <i class="fas fa-calendar me-1"></i>Data & Hora
                                </th>
                                <th>
                                    <i class="fas fa-dollar-sign me-1"></i>Preço
                                </th>
                                <th>
                                    <i class="fas fa-toggle-on me-1"></i>Status
                                </th>
                                <th class="text-center">
                                    <i class="fas fa-cogs me-1"></i>Ações
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var appointment in Model)
                            {
                                <tr>
                                    <td>
                                        <span class="badge bg-secondary">#@appointment.AppointmentId</span>
                                    </td>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <div class="bg-primary rounded-circle me-2 d-flex align-items-center justify-content-center" 
                                                 style="width: 40px; height: 40px;">
                                                <i class="fas fa-user text-white"></i>
                                            </div>
                                            <div>
                                                <div class="fw-bold">@appointment.Customer.User.FirstName @appointment.Customer.User.LastName</div>
                                                <small class="text-muted">@appointment.Customer.User.Email</small>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="fw-bold">@appointment.Service.Name</div>
                                        <span class="badge bg-info">@appointment.Service.Category?.Name</span>
                                    </td>
                                    <td>
                                        <div class="fw-bold">@appointment.Professional.Name</div>
                                        <small class="text-muted">@appointment.Professional.Specialty</small>
                                    </td>
                                    <td>
                                        <div class="fw-bold">@appointment.StartTime.ToString("dd/MM/yyyy")</div>
                                        <small class="text-muted">@appointment.StartTime.ToString("HH:mm") - @appointment.EndTime.ToString("HH:mm")</small>
                                        <div class="badge bg-info mt-1">
                                            @((appointment.EndTime - appointment.StartTime).TotalMinutes) min
                                        </div>
                                    </td>
                                    <td>
                                        <span class="fw-bold text-success">€ @(appointment.TotalPrice?.ToString("F2") ?? "0.00")</span>
                                    </td>
                                    <td>
                                        <select class="form-select form-select-sm status-select" data-appointment-id="@appointment.AppointmentId">
                                            <option value="Pending" selected="@(appointment.Status == "Pending")">Pendente</option>
                                            <option value="Confirmed" selected="@(appointment.Status == "Confirmed")">Confirmado</option>
                                            <option value="Completed" selected="@(appointment.Status == "Completed")">Concluído</option>
                                            <option value="Canceled" selected="@(appointment.Status == "Canceled")">Cancelado</option>
                                        </select>
                                    </td>
                                    <td>
                                        <div class="d-flex gap-1 justify-content-center">
                                            <a asp-action="Details" asp-route-id="@appointment.AppointmentId" 
                                               class="btn btn-info btn-sm" title="Visualizar">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            <a asp-action="Edit" asp-route-id="@appointment.AppointmentId" 
                                               class="btn btn-warning btn-sm" title="Editar">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                            <a asp-action="Delete" asp-route-id="@appointment.AppointmentId" 
                                               class="btn btn-danger btn-sm" title="Excluir">
                                                <i class="fas fa-trash"></i>
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="fas fa-calendar-times fa-4x text-muted mb-3"></i>
                    <h5 class="text-muted">Nenhum agendamento encontrado</h5>
                    <p class="text-muted">Nenhum agendamento corresponde aos filtros atuais.</p>
                    <a asp-action="Create" class="btn btn-primary">
                        <i class="fas fa-plus me-2"></i>Novo Agendamento
                    </a>
                </div>
            }
        </div>
    </div>
</div>

<!-- Filter Modal -->
<div class="modal fade" id="filterModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Filter Appointments</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form method="get">
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Status</label>
                            <select name="status" class="form-select">
                                <option value="">All Statuses</option>
                                <option value="Pending">Pending</option>
                                <option value="Confirmed">Confirmed</option>
                                <option value="Completed">Completed</option>
                                <option value="Canceled">Canceled</option>
                            </select>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Professional</label>
                            <select name="professionalId" class="form-select">
                                <option value="">All Professionals</option>
                                @foreach (var professional in ViewBag.Professionals)
                                {
                                    <option value="@professional.ProfessionalId">@professional.Name</option>
                                }
                            </select>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Start Date</label>
                            <input type="date" name="startDate" class="form-control">
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">End Date</label>
                            <input type="date" name="endDate" class="form-control">
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Apply Filters</button>
                </div>
            </form>
        </div>
    </div>
</div>

<style>
.appointments-admin-container {
    padding: 20px 0;
    background: #f8f9fa;
    min-height: 100vh;
}

.page-header {
    background: white;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
}

.stat-card {
    background: white;
    border-radius: 10px;
    padding: 20px;
    display: flex;
    align-items: center;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    transition: transform 0.3s ease;
}

.stat-card:hover {
    transform: translateY(-2px);
}

.stat-icon {
    width: 60px;
    height: 60px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-right: 15px;
    font-size: 24px;
    color: white;
}

.stat-pending .stat-icon { background: #ffc107; }
.stat-confirmed .stat-icon { background: #28a745; }
.stat-completed .stat-icon { background: #17a2b8; }
.stat-canceled .stat-icon { background: #dc3545; }

.stat-content h3 {
    margin: 0;
    font-size: 2rem;
    font-weight: bold;
}

.stat-content p {
    margin: 0;
    color: #6c757d;
    font-size: 0.9rem;
}

.avatar-sm {
    width: 32px;
    height: 32px;
    border-radius: 50%;
    background: #e9ecef;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #6c757d;
}

.status-select {
    min-width: 120px;
}

.card {
    border: none;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
}

.table th {
    border-top: none;
    font-weight: 600;
    color: #495057;
    background: #f8f9fa;
}

.btn-group .btn {
    margin-right: 2px;
}

@@media (max-width: 768px) {
    .stat-card {
        margin-bottom: 15px;
    }
    
    .table-responsive {
        font-size: 0.85rem;
    }
    
    .btn-group {
        flex-direction: column;
    }
    
    .btn-group .btn {
        margin-bottom: 2px;
        margin-right: 0;
    }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Handle status changes
    document.querySelectorAll('.status-select').forEach(select => {
        select.addEventListener('change', function() {
            const appointmentId = this.dataset.appointmentId;
            const newStatus = this.value;
            
            if (confirm(`Are you sure you want to change the status to ${newStatus}?`)) {
                fetch('/Admin/AdminAppointments/UpdateStatus', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify({
                        appointmentId: appointmentId,
                        status: newStatus
                    })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        location.reload();
                    } else {
                        alert('Error updating status: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error updating status');
                });
            } else {
                // Reset to original value
                this.value = this.dataset.originalValue || 'Pending';
            }
        });
    });
});
</script>