@model Sistema.Data.Entities.Appointment

@{
    ViewData["Title"] = "Appointment Details";
    Layout = "_AdminLayout";
}

<div class="appointment-details-container">
    <div class="container">
        <div class="row">
            <div class="col-12">
                <div class="page-header d-flex justify-content-between align-items-center mb-4">
                    <div>
                        <h1 class="h3 mb-0">Appointment Details</h1>
                        <p class="text-muted">Complete information about appointment #@Model.AppointmentId</p>
                    </div>
                    <div>
                        <a asp-action="Index" class="btn btn-secondary">
                            <i class="fas fa-arrow-left"></i> Back to List
                        </a>
                        <a asp-action="Edit" asp-route-id="@Model.AppointmentId" class="btn btn-primary">
                            <i class="fas fa-edit"></i> Edit
                        </a>
                    </div>
                </div>

                <div class="row">
                    <!-- Main Information -->
                    <div class="col-lg-8">
                        <div class="card mb-4">
                            <div class="card-header">
                                <h5 class="card-title mb-0">
                                    <i class="fas fa-calendar-alt"></i> Appointment Information
                                </h5>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="info-item">
                                            <label>Appointment ID:</label>
                                            <span class="badge bg-primary">#@Model.AppointmentId</span>
                                        </div>
                                        <div class="info-item">
                                            <label>Date:</label>
                                            <span>@Model.StartTime.ToString("dddd, MMMM dd, yyyy")</span>
                                        </div>
                                        <div class="info-item">
                                            <label>Time:</label>
                                            <span>@Model.StartTime.ToString("HH:mm") - @Model.EndTime.ToString("HH:mm")</span>
                                        </div>
                                        <div class="info-item">
                                            <label>Duration:</label>
                                            <span class="badge bg-info">@((Model.EndTime - Model.StartTime).TotalMinutes) minutes</span>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="info-item">
                                            <label>Status:</label>
                                            @switch (Model.Status)
                                            {
                                                case "Pending":
                                                    <span class="badge bg-warning">Pending</span>
                                                    break;
                                                case "Confirmed":
                                                    <span class="badge bg-success">Confirmed</span>
                                                    break;
                                                case "Completed":
                                                    <span class="badge bg-info">Completed</span>
                                                    break;
                                                case "Canceled":
                                                    <span class="badge bg-danger">Canceled</span>
                                                    break;
                                                default:
                                                    <span class="badge bg-secondary">@Model.Status</span>
                                                    break;
                                            }
                                        </div>
                                        <div class="info-item">
                                            <label>Total Price:</label>
                                            <span class="fw-bold text-success">€@(Model.TotalPrice?.ToString("F2") ?? "0.00")</span>
                                        </div>
                                        <div class="info-item">
                                            <label>Active:</label>
                                            @if (Model.IsActive)
                                            {
                                                <span class="badge bg-success">Yes</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-danger">No</span>
                                            }
                                        </div>
                                    </div>
                                </div>

                                @if (!string.IsNullOrEmpty(Model.Notes))
                                {
                                    <div class="info-item mt-3">
                                        <label>Notes:</label>
                                        <div class="notes-content">
                                            @Model.Notes
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>

                    <!-- Customer Information -->
                    <div class="col-lg-4">
                        <div class="card mb-4">
                            <div class="card-header">
                                <h5 class="card-title mb-0">
                                    <i class="fas fa-user"></i> Customer Information
                                </h5>
                            </div>
                            <div class="card-body">
                                <div class="customer-info">
                                    <div class="customer-avatar">
                                        <i class="fas fa-user-circle"></i>
                                    </div>
                                    <div class="customer-details">
                                        <h6 class="customer-name">
                                            @Model.Customer.User.FirstName @Model.Customer.User.LastName
                                        </h6>
                                        <p class="customer-email">
                                            <i class="fas fa-envelope"></i> @Model.Customer.User.Email
                                        </p>
                                        <p class="customer-phone">
                                            <i class="fas fa-phone"></i> @(Model.Customer.Phone ?? "Not provided")
                                        </p>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Service Information -->
                        <div class="card mb-4">
                            <div class="card-header">
                                <h5 class="card-title mb-0">
                                    <i class="fas fa-concierge-bell"></i> Service Information
                                </h5>
                            </div>
                            <div class="card-body">
                                <div class="service-info">
                                    <h6 class="service-name">@Model.Service.Name</h6>
                                    <p class="service-category">
                                        <i class="fas fa-tag"></i> @Model.Service.Category?.Name
                                    </p>
                                    <p class="service-price">
                                        <i class="fas fa-euro-sign"></i> €@Model.Service.Price.ToString("F2")
                                    </p>
                                    @if (!string.IsNullOrEmpty(Model.Service.Duration))
                                    {
                                        <p class="service-duration">
                                            <i class="fas fa-clock"></i> @Model.Service.Duration
                                        </p>
                                    }
                                    @if (!string.IsNullOrEmpty(Model.Service.Description))
                                    {
                                        <p class="service-description">
                                            @Model.Service.Description
                                        </p>
                                    }
                                </div>
                            </div>
                        </div>

                        <!-- Professional Information -->
                        <div class="card">
                            <div class="card-header">
                                <h5 class="card-title mb-0">
                                    <i class="fas fa-user-md"></i> Professional Information
                                </h5>
                            </div>
                            <div class="card-body">
                                <div class="professional-info">
                                    <div class="professional-avatar">
                                        @if (!string.IsNullOrEmpty(Model.Professional.PhotoPath))
                                        {
                                            <img src="@Url.Content(Model.Professional.PhotoPath)" alt="@Model.Professional.Name" class="img-fluid rounded-circle">
                                        }
                                        else
                                        {
                                            <i class="fas fa-user-md"></i>
                                        }
                                    </div>
                                    <div class="professional-details">
                                        <h6 class="professional-name">@Model.Professional.Name</h6>
                                        <p class="professional-specialty">
                                            <i class="fas fa-star"></i> @Model.Professional.Specialty
                                        </p>
                                        <p class="professional-phone">
                                            <i class="fas fa-phone"></i> @(Model.Professional.Phone ?? "Not provided")
                                        </p>
                                        <p class="professional-email">
                                            <i class="fas fa-envelope"></i> @(Model.Professional.Email ?? "Not provided")
                                        </p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Actions -->
                <div class="row">
                    <div class="col-12">
                        <div class="card">
                            <div class="card-header">
                                <h5 class="card-title mb-0">
                                    <i class="fas fa-cogs"></i> Actions
                                </h5>
                            </div>
                            <div class="card-body">
                                <div class="d-flex gap-2 flex-wrap">
                                    <a asp-action="Edit" asp-route-id="@Model.AppointmentId" class="btn btn-primary">
                                        <i class="fas fa-edit"></i> Edit Appointment
                                    </a>
                                    
                                    @if (Model.Status == "Pending")
                                    {
                                        <button class="btn btn-success" onclick="updateStatus('Confirmed')">
                                            <i class="fas fa-check"></i> Confirm
                                        </button>
                                    }
                                    
                                    @if (Model.Status == "Confirmed")
                                    {
                                        <button class="btn btn-info" onclick="updateStatus('Completed')">
                                            <i class="fas fa-check-double"></i> Mark as Completed
                                        </button>
                                    }
                                    
                                    @if (Model.Status != "Canceled")
                                    {
                                        <button class="btn btn-warning" onclick="updateStatus('Canceled')">
                                            <i class="fas fa-times"></i> Cancel
                                        </button>
                                    }
                                    
                                    <a asp-action="Delete" asp-route-id="@Model.AppointmentId" class="btn btn-danger">
                                        <i class="fas fa-trash"></i> Delete
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
.appointment-details-container {
    padding: 20px 0;
    background: #f8f9fa;
    min-height: 100vh;
}

.page-header {
    background: white;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
}

.card {
    border: none;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    border-radius: 10px;
}

.card-header {
    background: #f8f9fa;
    border-bottom: 1px solid #dee2e6;
    border-radius: 10px 10px 0 0 !important;
}

.info-item {
    margin-bottom: 15px;
}

.info-item label {
    font-weight: 600;
    color: #495057;
    display: block;
    margin-bottom: 5px;
}

.info-item span {
    color: #6c757d;
}

.notes-content {
    background: #f8f9fa;
    padding: 15px;
    border-radius: 8px;
    border-left: 4px solid #007bff;
    margin-top: 10px;
}

.customer-info, .professional-info {
    display: flex;
    align-items: center;
    gap: 15px;
}

.customer-avatar, .professional-avatar {
    width: 60px;
    height: 60px;
    border-radius: 50%;
    background: #e9ecef;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 24px;
    color: #6c757d;
    flex-shrink: 0;
}

.professional-avatar img {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.customer-details, .professional-details {
    flex: 1;
}

.customer-name, .professional-name, .service-name {
    margin: 0 0 10px 0;
    font-weight: 600;
    color: #2c3e50;
}

.customer-email, .customer-phone, .professional-phone, .professional-email, 
.professional-specialty, .service-category, .service-price, .service-duration {
    margin: 5px 0;
    color: #6c757d;
    font-size: 0.9rem;
}

.service-description {
    margin-top: 10px;
    padding: 10px;
    background: #f8f9fa;
    border-radius: 5px;
    font-size: 0.9rem;
    color: #495057;
}

@@media (max-width: 768px) {
    .customer-info, .professional-info {
        flex-direction: column;
        text-align: center;
    }
    
    .page-header {
        flex-direction: column;
        gap: 15px;
    }
    
    .page-header > div {
        text-align: center;
    }
}
</style>

<script>
function updateStatus(newStatus) {
    if (confirm(`Are you sure you want to change the status to ${newStatus}?`)) {
        fetch('/Admin/Appointment/UpdateStatus', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
            },
            body: JSON.stringify({
                appointmentId: @Model.AppointmentId,
                status: newStatus
            })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                location.reload();
            } else {
                alert('Error updating status: ' + data.message);
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Error updating status');
        });
    }
}
</script>
