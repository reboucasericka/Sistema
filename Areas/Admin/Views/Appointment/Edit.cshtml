@model Sistema.Data.Entities.Appointment

@{
    ViewData["Title"] = "Edit Appointment";
    Layout = "_AdminLayout";
}

<div class="appointment-edit-container">
    <div class="container">
        <div class="row">
            <div class="col-12">
                <div class="page-header d-flex justify-content-between align-items-center mb-4">
                    <div>
                        <h1 class="h3 mb-0">Edit Appointment</h1>
                        <p class="text-muted">Modify appointment #@Model.AppointmentId details</p>
                    </div>
                    <div>
                        <a asp-action="Index" class="btn btn-secondary">
                            <i class="fas fa-arrow-left"></i> Back to List
                        </a>
                        <a asp-action="Details" asp-route-id="@Model.AppointmentId" class="btn btn-info">
                            <i class="fas fa-eye"></i> View Details
                        </a>
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-8">
                        <div class="card">
                            <div class="card-header">
                                <h5 class="card-title mb-0">
                                    <i class="fas fa-edit"></i> Appointment Information
                                </h5>
                            </div>
                            <div class="card-body">
                                <form asp-action="Edit" method="post">
                                    <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>
                                    
                                    <input type="hidden" asp-for="AppointmentId" />
                                    <input type="hidden" asp-for="CustomerId" />
                                    <input type="hidden" asp-for="ProfessionalId" />
                                    <input type="hidden" asp-for="ServiceId" />

                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group mb-3">
                                                <label asp-for="StartTime" class="form-label">Start Date & Time</label>
                                                <input asp-for="StartTime" class="form-control" type="datetime-local" />
                                                <span asp-validation-for="StartTime" class="text-danger"></span>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group mb-3">
                                                <label asp-for="EndTime" class="form-label">End Date & Time</label>
                                                <input asp-for="EndTime" class="form-control" type="datetime-local" />
                                                <span asp-validation-for="EndTime" class="text-danger"></span>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group mb-3">
                                                <label asp-for="Status" class="form-label">Status</label>
                                                <select asp-for="Status" class="form-select">
                                                    <option value="Pending">Pending</option>
                                                    <option value="Confirmed">Confirmed</option>
                                                    <option value="Completed">Completed</option>
                                                    <option value="Canceled">Canceled</option>
                                                </select>
                                                <span asp-validation-for="Status" class="text-danger"></span>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group mb-3">
                                                <label asp-for="TotalPrice" class="form-label">Total Price (€)</label>
                                                <input asp-for="TotalPrice" class="form-control" type="number" step="0.01" min="0" />
                                                <span asp-validation-for="TotalPrice" class="text-danger"></span>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group mb-3">
                                        <div class="form-check">
                                            <input asp-for="IsActive" class="form-check-input" type="checkbox" />
                                            <label asp-for="IsActive" class="form-check-label">
                                                Active Appointment
                                            </label>
                                        </div>
                                        <span asp-validation-for="IsActive" class="text-danger"></span>
                                    </div>

                                    <div class="form-group mb-3">
                                        <label asp-for="Notes" class="form-label">Notes</label>
                                        <textarea asp-for="Notes" class="form-control" rows="4" placeholder="Add any additional notes about this appointment..."></textarea>
                                        <span asp-validation-for="Notes" class="text-danger"></span>
                                    </div>

                                    <div class="form-actions">
                                        <button type="submit" class="btn btn-primary">
                                            <i class="fas fa-save"></i> Save Changes
                                        </button>
                                        <a asp-action="Index" class="btn btn-secondary">
                                            <i class="fas fa-times"></i> Cancel
                                        </a>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-4">
                        <!-- Customer Information -->
                        <div class="card mb-4">
                            <div class="card-header">
                                <h5 class="card-title mb-0">
                                    <i class="fas fa-user"></i> Customer
                                </h5>
                            </div>
                            <div class="card-body">
                                <div class="customer-info">
                                    <div class="customer-avatar">
                                        <i class="fas fa-user-circle"></i>
                                    </div>
                                    <div class="customer-details">
                                        <h6 class="customer-name">
                                            @Model.Customer.User.FirstName @Model.Customer.User.LastName
                                        </h6>
                                        <p class="customer-email">
                                            <i class="fas fa-envelope"></i> @Model.Customer.User.Email
                                        </p>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Service Information -->
                        <div class="card mb-4">
                            <div class="card-header">
                                <h5 class="card-title mb-0">
                                    <i class="fas fa-concierge-bell"></i> Service
                                </h5>
                            </div>
                            <div class="card-body">
                                <div class="service-info">
                                    <h6 class="service-name">@Model.Service.Name</h6>
                                    <p class="service-category">
                                        <i class="fas fa-tag"></i> @Model.Service.Category?.Name
                                    </p>
                                    <p class="service-price">
                                        <i class="fas fa-euro-sign"></i> €@Model.Service.Price.ToString("F2")
                                    </p>
                                </div>
                            </div>
                        </div>

                        <!-- Professional Information -->
                        <div class="card">
                            <div class="card-header">
                                <h5 class="card-title mb-0">
                                    <i class="fas fa-user-md"></i> Professional
                                </h5>
                            </div>
                            <div class="card-body">
                                <div class="professional-info">
                                    <div class="professional-avatar">
                                        @if (!string.IsNullOrEmpty(Model.Professional.PhotoPath))
                                        {
                                            <img src="@Url.Content(Model.Professional.PhotoPath)" alt="@Model.Professional.Name" class="img-fluid rounded-circle">
                                        }
                                        else
                                        {
                                            <i class="fas fa-user-md"></i>
                                        }
                                    </div>
                                    <div class="professional-details">
                                        <h6 class="professional-name">@Model.Professional.Name</h6>
                                        <p class="professional-specialty">
                                            <i class="fas fa-star"></i> @Model.Professional.Specialty
                                        </p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
.appointment-edit-container {
    padding: 20px 0;
    background: #f8f9fa;
    min-height: 100vh;
}

.page-header {
    background: white;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
}

.card {
    border: none;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    border-radius: 10px;
}

.card-header {
    background: #f8f9fa;
    border-bottom: 1px solid #dee2e6;
    border-radius: 10px 10px 0 0 !important;
}

.form-group {
    margin-bottom: 1rem;
}

.form-label {
    font-weight: 600;
    color: #495057;
    margin-bottom: 0.5rem;
}

.form-control, .form-select {
    border: 1px solid #ced4da;
    border-radius: 8px;
    padding: 0.75rem;
    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}

.form-control:focus, .form-select:focus {
    border-color: #007bff;
    box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
}

.form-check-input:checked {
    background-color: #007bff;
    border-color: #007bff;
}

.form-actions {
    padding-top: 20px;
    border-top: 1px solid #dee2e6;
    margin-top: 20px;
}

.customer-info, .professional-info {
    display: flex;
    align-items: center;
    gap: 15px;
}

.customer-avatar, .professional-avatar {
    width: 50px;
    height: 50px;
    border-radius: 50%;
    background: #e9ecef;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 20px;
    color: #6c757d;
    flex-shrink: 0;
}

.professional-avatar img {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.customer-details, .professional-details {
    flex: 1;
}

.customer-name, .professional-name, .service-name {
    margin: 0 0 8px 0;
    font-weight: 600;
    color: #2c3e50;
    font-size: 0.95rem;
}

.customer-email, .professional-specialty, .service-category, .service-price {
    margin: 3px 0;
    color: #6c757d;
    font-size: 0.85rem;
}

.alert-danger {
    border: none;
    border-radius: 8px;
    background-color: #f8d7da;
    color: #721c24;
}

.text-danger {
    font-size: 0.875rem;
}

@@media (max-width: 768px) {
    .customer-info, .professional-info {
        flex-direction: column;
        text-align: center;
    }
    
    .page-header {
        flex-direction: column;
        gap: 15px;
    }
    
    .page-header > div {
        text-align: center;
    }
    
    .form-actions {
        text-align: center;
    }
    
    .form-actions .btn {
        width: 100%;
        margin-bottom: 10px;
    }
}
</style>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Auto-calculate end time when start time changes
            const startTimeInput = document.querySelector('input[name="StartTime"]');
            const endTimeInput = document.querySelector('input[name="EndTime"]');
            
            if (startTimeInput && endTimeInput) {
                startTimeInput.addEventListener('change', function() {
                    const startTime = new Date(this.value);
                    if (startTime && !isNaN(startTime.getTime())) {
                        // Add 1 hour by default (this could be made dynamic based on service duration)
                        const endTime = new Date(startTime.getTime() + 60 * 60 * 1000);
                        endTimeInput.value = endTime.toISOString().slice(0, 16);
                    }
                });
            }
        });
    </script>
}
