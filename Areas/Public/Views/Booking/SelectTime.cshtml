@model Sistema.Models.Public.BookingViewModel

@{
    ViewData["Title"] = "Escolher Horário";
    Layout = "_PublicLayout";
}

<div class="booking-container">
    <div class="container">
        <div class="row">
            <div class="col-12">
                <div class="booking-header text-center mb-5">
                    <h1 class="display-4 fw-bold text-primary">Escolher Horário</h1>
                    <p class="lead text-muted">
                        <strong>@Model.ServiceName</strong> com <strong>@Model.ProfessionalName</strong>
                    </p>
                </div>

                <!-- Progress Steps -->
                <div class="booking-steps mb-5">
                    <div class="row">
                        <div class="col-3">
                            <div class="step completed">
                                <div class="step-number">✓</div>
                                <div class="step-title">Serviço</div>
                            </div>
                        </div>
                        <div class="col-3">
                            <div class="step completed">
                                <div class="step-number">✓</div>
                                <div class="step-title">Profissional</div>
                            </div>
                        </div>
                        <div class="col-3">
                            <div class="step active">
                                <div class="step-number">3</div>
                                <div class="step-title">Horário</div>
                            </div>
                        </div>
                        <div class="col-3">
                            <div class="step">
                                <div class="step-number">4</div>
                                <div class="step-title">Confirmar</div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Service Summary -->
                <div class="service-summary mb-4">
                    <div class="row">
                        <div class="col-md-8">
                            <div class="summary-card">
                                <h5>Resumo do Agendamento</h5>
                                <div class="summary-details">
                                    <div class="detail-row">
                                        <span class="label">Serviço:</span>
                                        <span class="value">@Model.ServiceName</span>
                                    </div>
                                    <div class="detail-row">
                                        <span class="label">Profissional:</span>
                                        <span class="value">@Model.ProfessionalName</span>
                                    </div>
                                    <div class="detail-row">
                                        <span class="label">Duração:</span>
                                        <span class="value">@Model.Duration minutos</span>
                                    </div>
                                    <div class="detail-row">
                                        <span class="label">Preço:</span>
                                        <span class="value price">€@Model.Price.ToString("F2")</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Available Time Slots -->
                <div class="time-slots-section">
                    <h4 class="mb-4">Horários Disponíveis</h4>
                    
                    @if (Model.AvailableSlots?.Any() == true)
                    {
                        <div class="row">
                            @foreach (var slot in Model.AvailableSlots.Take(20)) // Show first 20 slots
                            {
                                <div class="col-lg-3 col-md-4 col-sm-6 mb-3">
                                    <div class="time-slot" data-time="@slot">
                                        <div class="slot-time">@slot</div>
                                    </div>
                                </div>
                            }
                        </div>
                        
                        @if (Model.AvailableSlots.Count > 20)
                        {
                            <div class="text-center mt-4">
                                <button class="btn btn-outline-primary" onclick="loadMoreSlots()">
                                    <i class="fas fa-plus"></i> Carregar Mais Horários
                                </button>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="alert alert-warning text-center">
                            <i class="fas fa-calendar-times fa-2x mb-3"></i>
                            <h4>Nenhum horário disponível</h4>
                            <p>Não há horários disponíveis para este profissional no momento.</p>
                            <a asp-action="SelectProfessional" asp-route-serviceId="@Model.ServiceId" class="btn btn-secondary">
                                <i class="fas fa-arrow-left"></i> Escolher Outro Profissional
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Hidden form for confirmation -->
<form id="confirmForm" asp-action="Confirm" method="post" style="display: none;">
    <input type="hidden" name="ServiceId" value="@Model.ServiceId" />
    <input type="hidden" name="ProfessionalId" value="@Model.ProfessionalId" />
    <input type="hidden" name="ServiceName" value="@Model.ServiceName" />
    <input type="hidden" name="ProfessionalName" value="@Model.ProfessionalName" />
    <input type="hidden" name="ServiceDuration" value="@Model.Duration" />
    <input type="hidden" name="Price" value="@Model.Price" />
    <input type="hidden" name="StartTime" id="selectedStartTime" />
    <input type="hidden" name="Notes" id="selectedNotes" />
</form>

<style>
.booking-container {
    padding: 60px 0;
    background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
    min-height: 100vh;
}

.booking-header h1 {
    color: #2c3e50;
    margin-bottom: 20px;
}

.booking-steps {
    max-width: 800px;
    margin: 0 auto;
}

.step {
    text-align: center;
    position: relative;
}

.step-number {
    width: 50px;
    height: 50px;
    border-radius: 50%;
    background: #e9ecef;
    color: #6c757d;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
    margin: 0 auto 10px;
    transition: all 0.3s ease;
}

.step.active .step-number {
    background: #007bff;
    color: white;
}

.step.completed .step-number {
    background: #28a745;
    color: white;
}

.step-title {
    font-size: 0.9rem;
    color: #6c757d;
    font-weight: 500;
}

.step.active .step-title {
    color: #007bff;
    font-weight: 600;
}

.step.completed .step-title {
    color: #28a745;
    font-weight: 600;
}

.service-summary {
    max-width: 800px;
    margin: 0 auto;
}

.summary-card {
    background: white;
    border-radius: 15px;
    padding: 25px;
    box-shadow: 0 5px 20px rgba(0,0,0,0.1);
}

.summary-card h5 {
    color: #2c3e50;
    margin-bottom: 20px;
    font-weight: 600;
}

.summary-details {
    display: flex;
    flex-direction: column;
    gap: 12px;
}

.detail-row {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 8px 0;
    border-bottom: 1px solid #f8f9fa;
}

.detail-row:last-child {
    border-bottom: none;
}

.label {
    color: #6c757d;
    font-weight: 500;
}

.value {
    color: #2c3e50;
    font-weight: 600;
}

.value.price {
    color: #28a745;
    font-size: 1.1rem;
}

.time-slots-section {
    max-width: 1000px;
    margin: 0 auto;
}

.time-slot {
    background: white;
    border: 2px solid #e9ecef;
    border-radius: 10px;
    padding: 15px;
    text-align: center;
    cursor: pointer;
    transition: all 0.3s ease;
    height: 100px;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

.time-slot:hover {
    border-color: #007bff;
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(0,123,255,0.2);
}

.time-slot.selected {
    background: #007bff;
    color: white;
    border-color: #007bff;
}

.slot-date {
    font-size: 0.9rem;
    color: #6c757d;
    font-weight: 500;
}

.time-slot.selected .slot-date {
    color: rgba(255,255,255,0.8);
}

.slot-time {
    font-size: 1.2rem;
    font-weight: bold;
    color: #2c3e50;
    margin: 5px 0;
}

.time-slot.selected .slot-time {
    color: white;
}

.slot-day {
    font-size: 0.8rem;
    color: #6c757d;
    text-transform: capitalize;
}

.time-slot.selected .slot-day {
    color: rgba(255,255,255,0.8);
}

@@media (max-width: 768px) {
    .booking-container {
        padding: 40px 0;
    }
    
    .booking-header h1 {
        font-size: 2rem;
    }
    
    .step-number {
        width: 40px;
        height: 40px;
        font-size: 0.9rem;
    }
    
    .step-title {
        font-size: 0.8rem;
    }
    
    .time-slot {
        height: 80px;
        padding: 10px;
    }
    
    .slot-time {
        font-size: 1rem;
    }
}
</style>

<script>
let selectedSlot = null;

document.addEventListener('DOMContentLoaded', function() {
    const timeSlots = document.querySelectorAll('.time-slot');
    
    timeSlots.forEach(slot => {
        slot.addEventListener('click', function() {
            // Remove previous selection
            timeSlots.forEach(s => s.classList.remove('selected'));
            
            // Add selection to clicked slot
            this.classList.add('selected');
            selectedSlot = this.dataset.datetime;
            
            // Show confirmation button
            showConfirmationButton();
        });
    });
});

function showConfirmationButton() {
    if (selectedSlot) {
        // Remove existing button if any
        const existingBtn = document.querySelector('.confirm-booking-btn');
        if (existingBtn) {
            existingBtn.remove();
        }
        
        // Create confirmation button
        const confirmBtn = document.createElement('div');
        confirmBtn.className = 'confirm-booking-btn text-center mt-4';
        confirmBtn.innerHTML = `
            <button class="btn btn-success btn-lg" onclick="proceedToConfirmation()">
                <i class="fas fa-check"></i> Continuar para Confirmação
            </button>
        `;
        
        document.querySelector('.time-slots-section').appendChild(confirmBtn);
    }
}

function proceedToConfirmation() {
    if (selectedSlot) {
        document.getElementById('selectedStartTime').value = selectedSlot;
        document.getElementById('confirmForm').submit();
    }
}

function loadMoreSlots() {
    // This would typically load more slots via AJAX
    alert('Funcionalidade de carregar mais horários será implementada em breve.');
}
</script>
